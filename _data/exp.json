[
    {
        "Company": "Gfi",
        "StartDate": "2013-01-02",
        "EndDate": "",
        "Projects": [
            {
                "Customer": "Toyota",
                "Sector": "Automotive",
                "Website": "https://www.toyota.be/",
                "ProjectName": "Getsudo Units Planner Phase 2",
                "StartDate": "2017-02-01",
                "EndDate": "2016-07-11",
                "PeopleInvolved": 3,
                "DurationInMonth": 6,
                "TechnicalEnvironment": "React, Redux, Node.js, Express, Heroku, Git, Visual Studio Code, SQL Server 2012, Javascript, HTML 5, CSS 3, Gulp, Bower, Npm, jQuery, Passport, Mocha, SequelizeJs",
                "TechnicalCategories": "React, Redux, NodeJs, Express, Heroku, Git, Visual Studio Code, SQL Server, Javascript, HTML, CSS, Gulp, Bower, Npm, jQuery, Passport, Mocha, SequelizeJs",                
                "ProjectDescription": "Getsudo Units Planner is used as an order planner and forecast generator for vehicle) and unitplants for Toyota. Based on data from previous periods, future periods are planned and assumptions regarding number of vehicles to build are generated by the system. Integration with on-premise services has been implemented to get factual data when specific vehicle- and/or unitplants change their orders. The system omits alot of manual work done previously in excel and in stead makes for easier and faster planning, helping unit planners keep track of previous data all stored in one central place and combines three systems to generate production plans.",
                "Function": "Development team leader",
                "JobDescription": "Member of an agile development team using the Scrum methodology and pair programming, functional analysis, pre-sales research and estimation, analysis, development, testing, integration, bugfixing",
                "Importance": "primary",
                "Icon": "car"
            },
            { 
                "Customer": "Toyota",
                "Sector": "Automotive",
                "Website": "https://www.toyota.be/",
                "ProjectName": "Network KPI",
                "StartDate": "2016-10-15",
                "EndDate": "2016-01-15",
                "ManDays": 100,
                "PeopleInvolved": 2,
                "DurationInMonth": 3,
                "TechnicalEnvironment": "React, Redux, Node.js, Express, Heroku, Git, Visual Studio Code, SQL Server 2012, Javascript, HTML 5, CSS 3, ES6, Babel, Webpack, Bower, Npm, jQuery, Passport, Mocha",
                "TechnicalCategories": "React, Redux, NodeJs, Express, Heroku, Git, Visual Studio Code, SQL Server, Javascript, HTML, CSS, ES6, Babel, Webpack, Bower, Npm, jQuery, Passport, Mocha",                
                "ProjectDescription": "Network KPI is a new web tool made for Toyota that allows them to gather KPIs from their NMSCs so that this data can be used in their PowerBI tools. This web tool replaces an Excel based solution with a much more user friendly interface conform with the Toyota styling standards and provides a more reliable way to get the correct data.",
                "Function": "Development team leader",
                "JobDescription": "Member of an agile development team using the Scrum methodology and pair programming, functional analysis, pre-sales research and estimation, analysis, development, testing, integration, bugfixing",
                "Importance": "primary",
                "Icon": "car"
            },
            {
                "Customer": "Toyota",
                "Sector": "Automotive",
                "Website": "https://www.toyota.be/",
                "ProjectName": "Getsudo Units Planner Phase 1",
                "StartDate": "2016-02-01",
                "EndDate": "2016-10-15",
                "PeopleInvolved": 3,
                "DurationInMonth": 8,
                "TechnicalEnvironment": "React, Redux, Node.js, Express, Heroku, Git, Visual Studio Code, SQL Server 2012, Javascript, HTML 5, CSS 3, Gulp, Bower, Npm, jQuery, Passport, Mocha, SequelizeJs",
                "TechnicalCategories": "React, Redux, NodeJs, Express, Heroku, Git, Visual Studio Code, SQL Server, Javascript, HTML, CSS, Gulp, Bower, Npm, jQuery, Passport, Mocha, SequelizeJs",                
                "ProjectDescription": "Getsudo Units Planner is used as an order planner and forecast generator for vehicle) and unitplants for Toyota. Based on data from previous periods, future periods are planned and assumptions regarding number of vehicles to build are generated by the system. Integration with on-premise services has been implemented to get factual data when specific vehicle- and/or unitplants change their orders. The system omits alot of manual work done previously in excel and in stead makes for easier and faster planning, helping unit planners keep track of previous data all stored in one central place and combines three systems to generate production plans.",
                "Function": "Development team leader",
                "JobDescription": "Member of an agile development team using the Scrum methodology and pair programming, functional analysis, pre-sales research and estimation, analysis, development, testing, integration, bugfixing",
                "Importance": "primary",
                "Icon": "car"
            },
            {
                "Customer": "Total",
                "Sector": "Energy & Utilities",
                "Website": "http://www.total.be",
                "ProjectName": "Contractors Portal Support",
                "ProjectShortName": "CP Sup",
                "StartDate": "2015-03-01",
                "EndDate": "2016-01-31",
                "ManDays": 400,
                "PeopleInvolved": 5,
                "DurationInMonth": 9,
                "TechnicalEnvironment": ".NET 4.5.2, C#, MVC 5, Web API 2, Rest Services, ASP.NET Identity 2, Durandal.js, Require.js, Knockout.js, I18Next, Entity Framework 6, SQL Server 2012, IIS 8.5, Windows 2012, Bootstrap 3, Visual Studio 2013, VSTests, Jasime, Qunit, Git, TFS, VSO, Visual Studio 2013, HTML 5, CSS 3, Javascript",
                "TechnicalCategories": ".Net, C#, MVC, Web API, Rest Services, ASP.NET Identity, DurandalJs, RequireJs, KnockoutJs, I18Next, Entity Framework, SQL Server, IIS, Bootstrap, Visual Studio, VSTests, Jasime, Qunit, Git, TFS, VSO, HTML, CSS, Javascript",                
                "ProjectDescription": "Total Contractor Portal is the new web portal for contractors that want to work for Total Antwerp.\nIt is the main entry point for new contractors to present their company, offer their services to Total Antwerp, and request for an approval to make sure their employees are allowed to enter the different sites of Total.\nAs management tool it helps external contractors and Total employees in their daily administration. Documents, employee details and site entrance requests are handled and stored in one central place and the tool makes the follow-up of contractors and people access more transparent.\nContractors can register their company as a candidate for a collaboration with Total, manage their documents requested by Total, add and manage employees, add and manage sub-contractors and keep track of their own approval state.\nTotal coworkers can manage contractor requests in a structured way, keep track of documents needed to get approved as a contractor for Total Antwerp and handle the complete approval flow of companies and employee access to the different sites of Total Antwerp.",
                "Function": "Medior developer, team support, POC",
                "JobDescription": "Third line support, execute change requests (in Kanban)",
                "IsAside": "true",
                "Importance": "default",
                "Icon": "industry"
            },
            {
                "Customer": "Total",
                "Sector": "Energy & Utilities",
                "Website": "http://www.total.be",
                "ProjectName": "Contractors Portal",
                "ProjectShortName": "CP",
                "StartDate": "2014-09-01",
                "EndDate": "2015-02-28",
                "ManDays": 448,
                "PeopleInvolved": 10,
                "DurationInMonth": 6,
                "TechnicalEnvironment": ".NET 4.5.2, C#, MVC 5, Web API 2, Rest Services, ASP.NET Identity 2, Durandal.js, Require.js, Knockout.js, I18Next, Entity Framework 6, SQL Server 2012, IIS 8.5, Windows 2012, Bootstrap 3, Visual Studio 2013, VSTests, Jasime, Qunit, Git, TFS, VSO, Visual Studio 2013, HTML 5, CSS 3, Javascript",
                "TechnicalCategories": ".Net, C#, MVC, Web API, Rest Services, ASP.NET Identity, DurandalJs, RequireJs, KnockoutJs, I18Next, Entity Framework, SQL Server, IIS, Windows, Bootstrap, Visual Studio, VSTests, Jasime, Qunit, Git, TFS, VSO, HTML, CSS, Javascript",                
                "ProjectDescription": "Total Contractor Portal is the new web portal for contractors that want to work for Total Antwerp.\nIt is the main entry point for new contractors to present their company, offer their services to Total Antwerp, and request for an approval to make sure their employees are allowed to enter the different sites of Total.\nAs management tool it helps external contractors and Total employees in their daily administration. Documents, employee details and site entrance requests are handled and stored in one central place and the tool makes the follow-up of contractors and people access more transparent.\nContractors can register their company as a candidate for a collaboration with Total, manage their documents requested by Total, add and manage employees, add and manage sub-contractors and keep track of their own approval state.\nTotal coworkers can manage contractor requests in a structured way, keep track of documents needed to get approved as a contractor for Total Antwerp and handle the complete approval flow of companies and employee access to the different sites of Total Antwerp.",
                "Function": "Medior developer, team support",
                "JobDescription": "Member of an agile development team, Pair programming, Test-driven development, choose the framework",
                "Importance": "primary",
                "Icon": "industry"
            },
            {
                "Customer": "Atlas Copco",
                "Sector": "Industry",
                "Website": "http://www.atlascopco.com",
                "ProjectName": "Master Data Loader",
                "ProjectShortName": "MDL",
                "StartDate": "2016-01-01",
                "EndDate": "2016-09-01",
                "ManDays": 150,
                "PeopleInvolved": 2,
                "DurationInMonth": 9,
                "TechnicalEnvironment": "WPF, XAML, WCF, Entity Framework 6, Sql Server 2012, web services (asmx), TFS, VSO, Visual Studio 2013, XML, SOAP",
                "TechnicalCategories": "WPF, XAML, WCF, Entity Framework, Sql Server, web services, TFS, VSO, Visual Studio, XML, SOAP",
                "ProjectDescription": "Master data loader is a tool used by atlas copco to synchronize data coming from multiple sources into their Quotation system.\nIt includes loading, cleaning and computing of data coming from various sources (databases, files, other systems through webservices) and uploading them into the Quotation system using webservices.",
                "Function": "Developer",
                "JobDescription": "This small project was already developed but had some issues which I was to find, describe and fix together with some extensions on the existing software.",
                "Importance": "default",
                "Icon": "compress"
            },
            {
                "Customer": "Toyota",
                "Sector": "Automotive",
                "Website": "www.toyota.be",
                "ProjectName": "T1",
                "StartDate": "2014-01-01",
                "EndDate": "2014-09-01",
                "ManDays": "~4000",
                "PeopleInvolved": "15",
                "DurationInMonth": 9,
                "TechnicalEnvironment": "Node.js, Javascript, grunt, jquery, CSS 3, HTML 5, bootstrap, scss, nunjucks, mongo db, C#, tridio, Git, Webstorm",
                "TechnicalCategories": "NodeJs, Javascript, grunt, jquery, CSS, HTML, bootstrap, scss, nunjucks, mongo db, C#, tridio, Git, Webstorm",
                "ProjectDescription": "Recreate the entire customer facing website, for all websites in Europe and Russia:\nwww.toyota.be, www.toyota.it, www.toyota.fr, www.toyota.nl, etc.",
                "Function": "Front-end developer",
                "JobDescription": "Front-end work, templating using nunjucks and back-end work done in C#.",
                "Importance": "default",
                "Icon": "car"
            },
            {
                "Customer": "Atlas Copco",
                "Sector": "Industry",
                "Website": "http://www.atlascopco.com",
                "ProjectName": "iC³ Maint",
                "StartDate": "2013-10-01",
                "EndDate": "2015-12-31",
                "ManDays": "",
                "PeopleInvolved": 3,
                "DurationInMonth": 26,
                "TechnicalEnvironment": ".Net 4.5, WebApi 2.0, Asp.Net, Entity Framework 6, Javascript, HTML, CSS, Jquery, Knockout.js, VSTests, TFS, VSO, Visual Studio 2013, XML, JSON",
                "TechnicalCategories": ".Net, WebApi, Asp.Net, Entity Framework, Javascript, HTML, CSS, Jquery, KnockoutJs, VSTests, TFS, VSO, Visual Studio, XML, JSON",
                "ProjectDescription": "Review and enhance parts of IC³ developed in 2008",
                "Function": "Developer",
                "JobDescription": "Define priorities with the client\nImplement changes\nTest and deploy changes",
                "IsAside": "true",
                "Importance": "default",
                "Icon": "compress"
            },
            {
                "Customer": "Atlas Copco",
                "Sector": "Industry",
                "Website": "http://www.atlascopco.com",
                "ProjectName": "PMA",
                "StartDate": "2013-02-01",
                "EndDate": "2013-09-01",
                "ManDays": "",
                "PeopleInvolved": "6",
                "DurationInMonth": 7,
                "TechnicalEnvironment": ".Net 4.5, WebApi 2.0, Asp.Net, Entity Framework 5, Entity Framework 6, Pair programming, TDD, Javascript, Jquery, Knockout.js, Moq, VSTests, TFS, VSO, Visual Studio 2013, HTML, CSS, XML, XSD, XSLT",
                "TechnicalCategories": ".Net, WebApi, Asp.Net, Entity Framework, TDD, Javascript, Jquery, KnockoutJs, Moq, VSTests, TFS, VSO, Visual Studio, HTML, CSS, XML, XSD, XSLT",
                "ProjectDescription": "The goal of this project was to rewrite and integrate in iC³ the tools the engineering teams needed to support their new way of managing the proposal and contracting phase of the order process, using LEAN methodoligies.",
                "Function": "Member of the development team",
                "JobDescription": "Design, code, test along with the other team members.\nCreate and present demo to the client\nSetup and maintain the continious delivery platform (using VSO)",
                "Importance": "primary",
                "Icon": "tasks"
            }
        ]
    },
    {
        "Company": "4Dvision",
        "StartDate": "2012-10-08",
        "EndDate": "2012-12-21",
        "Projects": [
            {
                "Employer": "4Dvision",
                "Customer": "4Dvision",
                "Sector": "Research & Development",
                "Website": "https://www.4dvision.be",
                "ProjectName": "CRM development",
                "StartDate": "2012-10-08",
                "EndDate": "2012-12-21",
                "ManDays": "",
                "PeopleInvolved": "8",
                "DurationInMonth": "3",
                "TechnicalEnvironment": "SQL, C#, ASP.NET",
                "TechnicalCategories": "SQL Server, .NET, Visual Studio",
                "ProjectDescription": "CRM maintenance and extensions - built to the customer's needs.",
                "Function": "Developer",
                "JobDescription": "Maintaining, bugfixing, extending the existing CRM and customizing it for multiple clients.",
                "Importance": "primary",
                "Icon": "keyboard-o"
            }
        ]
    },
    {
        "Company": "University of Hasselt",
        "StartDate": "2012-01-02",
        "EndDate": "2012-07-30",
        "Projects": [
            {
                "Employer": "University of Hasselt",
                "Customer": "University of Hasselt",
                "Sector": "Research & Development",
                "Website": "https://www.uhasselt.be/UH/Over-MOFOR/Over-MOFOR-Wat-is-Moving-Forward.html",
                "ProjectName": "MoFor",
                "StartDate": "2012-01-02",
                "EndDate": "2012-07-30",
                "ManDays": "",
                "PeopleInvolved": "2",
                "DurationInMonth": "7",
                "TechnicalEnvironment": "Objective-C, iOs",
                "TechnicalCategories": "Objective-C, iOs, xCode, WebApi",
                "ProjectDescription": "Moving Forward is a geographic information system based IT application to generate reachability maps.",
                "Function": "Intern developer",
                "JobDescription": "My job was to develop - together with a fellow student at the time - the iOs side of the application.",
                "Importance": "primary",
                "Icon": "graduation-cap"
            }
        ]
    }
]